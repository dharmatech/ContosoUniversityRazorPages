@page
@model ContosoUniversity.Pages.Courses.DetailsModel
@using System.Linq.Expressions

@{
    ViewData["Title"] = "Details";
}

@{
    async Task Template1<T>(Expression<Func<DetailsModel, T>> expr)
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(expr)
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(expr)
        </dd>
    }

    async Task Template2<T1, T2>(Expression<Func<DetailsModel, T1>> expr_a, Expression<Func<DetailsModel, T2>> expr_b)
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(expr_a)
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(expr_b)
        </dd>
    }

}

<h1>Details</h1>

<div>
    <h4>Course</h4>
    <hr />
    <dl class="row">
        @{
            await Template1(model => model.Course.CourseID);
            await Template1(model => model.Course.Title);
            await Template1(model => model.Course.Credits);
            await Template2(model => model.Course.Department, model => model.Course.Department.Name);

        }
    </dl>
</div>
<div>
    <a asp-page="./Edit" asp-route-id="@Model.Course.CourseID">Edit</a> |
    <a asp-page="./Index">Back to List</a>
</div>
