@page
@model ContosoUniversity.Pages.Courses.DeleteModel

@using System.Linq.Expressions 

@{ ViewData["Title"] = "Delete"; }

@{ 
    async Task Template1<T>(Expression<Func<DeleteModel, T>> expr)
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(expr)
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(expr)
        </dd>
    }

    async Task Template2<T1, T2>(Expression<Func<DeleteModel, T1>> expr_a, Expression<Func<DeleteModel, T2>> expr_b)
    {
        <dt class="col-sm-2">
            @Html.DisplayNameFor(expr_a)
        </dt>

        <dd class="col-sm-10">
            @Html.DisplayFor(expr_b)
        </dd>
    }

}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Course</h4>
    <hr />
    <dl class="row">
        @{
            await Template1(model => model.Course.CourseID);
            await Template1(model => model.Course.Title);
            await Template1(model => model.Course.CourseID);
            await Template2(model => model.Course.Department, model => model.Course.Department.Name);
        }
    </dl>
    
    <form method="post">
        <input type="hidden" asp-for="Course.CourseID" />
        <input type="submit" value="Delete" class="btn btn-danger" /> |
        <a asp-page="./Index">Back to List</a>
    </form>
</div>
